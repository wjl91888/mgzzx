<?xml version="1.0" encoding="gb2312"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" encoding="GB2312"/>
  <xsl:variable name="FileName" select="'WebUI.cs.xsl'"/>
  <xsl:template match="/">
/****************************************************** 
FileName:<xsl:value-of select="/NewDataSet/TableName"/>WebUI.cs
******************************************************/
using System;
using System.Data;

namespace RICH.Common.BM.<xsl:value-of select="/NewDataSet/TableName"/>
{
    //=========================================================================
    //  ClassName : <xsl:value-of select="/NewDataSet/TableName"/>Contants
    /// <summary>
    /// <xsl:value-of select="/NewDataSet/TableName"/>的常数类
    /// </summary>
    //=========================================================================
    public class <xsl:value-of select="/NewDataSet/TableName"/>Contants
    {
  <xsl:for-each select="/NewDataSet/RecordInfo">
    <xsl:if test="IsUse = 'true'">
        public static readonly string <xsl:value-of select="FieldName"/>FieldName = "<xsl:value-of select="FieldName"/>";
        public static readonly string <xsl:value-of select="FieldName"/>FieldRemark = "<xsl:value-of select="FieldRemark"/>";
    </xsl:if>
</xsl:for-each>    
    
        public static readonly string AutoGenerateField = "<xsl:value-of select="/NewDataSet/AutoGenerateField"/>";
        public static readonly int AutoGenerateNumberLength = <xsl:choose><xsl:when test="/NewDataSet/AutoGenerateNumberLength != ''"><xsl:value-of select="/NewDataSet/AutoGenerateNumberLength"/></xsl:when><xsl:otherwise>0</xsl:otherwise></xsl:choose>;
        public static readonly string AutoGeneratePrefix = <xsl:choose><xsl:when test="/NewDataSet/AutoGeneratePrefix != ''"><xsl:value-of select="/NewDataSet/AutoGeneratePrefix"/></xsl:when><xsl:otherwise>""</xsl:otherwise></xsl:choose>;
        public static readonly bool AllowAutoGenerateID = <xsl:value-of select="/NewDataSet/AllowAutoGenerateID"/>;
        public static readonly bool AutoGenerateDay = <xsl:value-of select="/NewDataSet/AutoGenerateDay"/>;
        public static readonly bool AutoGenerateHour = <xsl:value-of select="/NewDataSet/AutoGenerateHour"/>;
        public static readonly bool AutoGenerateMinute = <xsl:value-of select="/NewDataSet/AutoGenerateMinute"/>;
        public static readonly bool AutoGenerateMonth = <xsl:value-of select="/NewDataSet/AutoGenerateMonth"/>;
        public static readonly bool AutoGenerateMSecond = <xsl:value-of select="/NewDataSet/AutoGenerateMSecond"/>;
        public static readonly bool AutoGenerateSecond = <xsl:value-of select="/NewDataSet/AutoGenerateSecond"/>;
        public static readonly bool AutoGenerateYear = <xsl:value-of select="/NewDataSet/AutoGenerateYear"/>;
        public static readonly bool AutoGenerateOrder = <xsl:value-of select="/NewDataSet/AutoGenerateOrder"/>;
        public static readonly bool AutoGenerateIncludeDateTime = <xsl:value-of select="/NewDataSet/AutoGenerateIncludeDateTime"/>;
        public static readonly bool Sort = <xsl:value-of select="/NewDataSet/Sort"/>;
        
        public static readonly bool NoTableBorder = <xsl:value-of select="/NewDataSet/NoTableBorder"/>;
        public static readonly bool ExistPDFPageHeader = <xsl:value-of select="/NewDataSet/ExistPDFPageHeader"/>;
        public static readonly bool ExistPDFPageFooter = <xsl:value-of select="/NewDataSet/ExistPDFPageFooter"/>;
        public static readonly bool ExistPDFTableTitle = <xsl:value-of select="/NewDataSet/ExistPDFTableTitle"/>;
        public static readonly string PDFPageHeader = "<xsl:value-of select="/NewDataSet/PDFPageHeader"/>";
        public static readonly string PDFPageFooter = "<xsl:value-of select="/NewDataSet/PDFPageFooter"/>";
        public static readonly string PDFTableTitle = "<xsl:value-of select="/NewDataSet/PDFTableTitle"/>";
        public static readonly bool IsPDFCustomTitle = <xsl:value-of select="/NewDataSet/IsPDFCustomTitle"/>;
        public static readonly string PDFCustomTitleReadField = "<xsl:value-of select="/NewDataSet/PDFCustomTitleReadField"/>";
        public static readonly string PDFCustomTitle = "<xsl:value-of select="/NewDataSet/PDFCustomTitle"/>";
        
        public static readonly bool ImportFromDoc = <xsl:value-of select="/NewDataSet/ImportFromDoc"/>;
        public static readonly bool ImportFromDataSet = <xsl:value-of select="/NewDataSet/ImportFromDataSet"/>;
        public static readonly int ImportDataSetStartLineNum = <xsl:choose><xsl:when test="/NewDataSet/ImportDataSetStartLineNum != ''"><xsl:value-of select="/NewDataSet/ImportDataSetStartLineNum"/></xsl:when><xsl:otherwise>2</xsl:otherwise></xsl:choose>;
        public static readonly bool ExportToDocumentTemplate = <xsl:value-of select="/NewDataSet/ExportToDocumentTemplate"/>;
        public static readonly bool ExportToPDF = <xsl:value-of select="/NewDataSet/ExportToPDF"/>;
        public static readonly bool CopyItem = <xsl:value-of select="/NewDataSet/CopyItem"/>;
        public static readonly bool WebDetailPage = <xsl:value-of select="/NewDataSet/WebDetailPage"/>;
        public static readonly bool UseFilterReport = <xsl:value-of select="/NewDataSet/UseFilterReport"/>;
        
        public static readonly string SortField = "<xsl:value-of select="/NewDataSet/SortField"/>";
        public static readonly string TitleField = "<xsl:value-of select="/NewDataSet/TitleField"/>";
        
        public static readonly string GetValueTextField = "<xsl:value-of select="/NewDataSet/GetValueTextField"/>";
        public static readonly string GetValueValueField = "<xsl:value-of select="/NewDataSet/GetValueValueField"/>";
        public static readonly bool GetValue = <xsl:value-of select="/NewDataSet/GetValue/GetValue"/>;
        public static readonly bool GetValueByKey = <xsl:value-of select="/NewDataSet/GetValue/GetValueByKey"/>;
    }
}
  </xsl:template>
</xsl:stylesheet>